@name Red Fox's Wheel Grip HaxV1.55
@inputs [FL FR RL RR Base Prop1 Prop2 Prop3 Prop4]:entity On Space
@outputs Roll Pitch [ForceFL ForceFR ForceRL ForceRR BaseForce FBForce]:vector MoveFix FrontBackFix SpaceFix Ops

@persist R:ranger FrontForce RearForce LimitPitch LimitRoll ForceBase FrontForceMult RearForceMult ForceBaseMult FrontBackFixMult
@persist Base:entity [FLVec FRVec RLVec RRVec]:vector RangeFront RangeRear Rdb Tick
@persist Wheels:array NotHolding
runOnTick(1)
Ops = ops()

if(duped() || dupefinished())
{
    reset()
}

#Debug for the ranger

if(first())
{
    Tick = tickInterval()
    Wheels[1, entity] = FL
    Wheels[2, entity] = FR
    Wheels[3, entity] = RL
    Wheels[4, entity] = RR
    
    Wheels[5, entity] = Prop1
    Wheels[6, entity] = Prop2
    Wheels[7, entity] = Prop3
    Wheels[8, entity] = Prop4
    
    Wheels[9, entity] = Base
    
    rangerFilter(Wheels)
    Rdb = 0 
    
    RangeFront = 25
    RangeRear = 25
    
    #Base = entity():isWeldedTo()
    
    FrontForceMult = 15
    RearForceMult = 15
    ForceBaseMult = -7
    
    FrontBackFixMult = 0.05
    
    
    if(Tick >= 0.030)
    {
        FrontForce = FrontForceMult
        RearForce = RearForceMult
        ForceBase = ForceBaseMult
        FrontBackFix = FrontBackFixMult
    }
    else
     {
        FrontForce = FrontForceMult/2
        RearForce = RearForceMult/2
        ForceBase = ForceBaseMult/2
        FrontBackFix = FrontBackFixMult/2
    }
    SpaceFix = 0
    LimitPitch = 65
    LimitRoll = 65
    
    NotHolding = !FL:isPlayerHolding() && !FR:isPlayerHolding() && !RL:isPlayerHolding() && !RR:isPlayerHolding()
        
    function debugholos()
    {
        rangerFilter(Wheels)
        local Ranger1 = rangerOffset(RangeFront, FL:pos(), -Base:up())
        rangerFilter(Wheels)
        local Ranger2 = rangerOffset(RangeFront, FR:pos(), -Base:up())
        rangerFilter(Wheels)
        local Ranger3 = rangerOffset(RangeRear, RL:pos(), -Base:up())
        rangerFilter(Wheels)
        local Ranger4 = rangerOffset(RangeRear, RR:pos(), -Base:up())
        
        holoPos(1, Ranger1:pos())
        holoPos(2, Ranger2:pos())
        holoPos(3, Ranger3:pos())
        holoPos(4, Ranger4:pos())
    }
    ##stuff
    
    function grip()
    {
        Roll = abs(Base:angles():roll())
        Pitch = abs(Base:angles():pitch())
        
        #Ranger stuff
        local BaseNegUp = -Base:up()
        
        local FLR = rangerOffset(RangeFront, FL:pos(), BaseNegUp)
        local HitFL = FLR:hit()
              
        local FRR = rangerOffset(RangeFront, FR:pos(), BaseNegUp)  
        local HitFR = FRR:hit()
        
        local RLR = rangerOffset(RangeRear, RL:pos(), BaseNegUp)
        local HitRL = RLR:hit()
                
        local RRR = rangerOffset(RangeRear, RR:pos(), BaseNegUp)
        local HitRR = RRR:hit()
        MoveFix = FrontBackFix
        if(Roll <= LimitRoll && Pitch <= LimitPitch)
        {
            if(HitFL){
                FL:applyForce(BaseNegUp * FL:mass() * FrontForce)
            }
            if(HitFR){
                FR:applyForce(BaseNegUp * FR:mass() * FrontForce)
            }
            if(HitRL){
                RL:applyForce(BaseNegUp * RL:mass() * RearForce)
            }
            if(HitRR)
            {
                RR:applyForce(BaseNegUp * RR:mass() * RearForce)
            }
            
            if(HitFL&HitFR&HitRL&HitRR)
            {
                Base:applyForce(-(Base:forward() * Base:mass() * MoveFix))
            }
        }
        
        if(HitFL && HitFR && HitRL && HitRR)
        {
            Base:applyForce(BaseNegUp * Base:mass() * ForceBase + BaseNegUp * FrontForce * RearForce)
        }
        
        
        #[if(Space)
        {
            MoveFix = SpaceFix
        }
        else
        {
            MoveFix = FrontBackFix
        }
        }]#
        
        #if(HitFL&HitFR&HitRL&HitRR&Roll<=LimitRoll&&Pitch<=LimitPitch){Base:applyForce(-(Base:forward() * Base:mass() * MoveFix))}
    }
}


if(Rdb)
{

    holoCreate(1)
    holoCreate(2)
    holoCreate(3)
    holoCreate(4)
    debugholos()
}


if(On && NotHolding)
{
    grip()
}



